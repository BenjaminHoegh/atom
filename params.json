{
  "name": "Atom",
  "tagline": "LiveStyle plugin for Atom editor",
  "body": "# LiveStyle plugin for Atom\r\n\r\n*Currently in beta and may contain bugs. Makes excessive console logging, it can be disabled in package settings.*\r\n\r\n[LiveStyle](http://livestyle.io) is a real-time bi-directional edit tool for CSS, LESS and SCSS. [Read about LiveStyle project](http://livestyle.io/docs/) before using this plugin.\r\n\r\n## Installation\r\n\r\nThis plugin can be installed as regular Atom package:\r\n\r\n1. In Atom, go to `Preferences > Install`.\r\n2. Search for `livestyle-atom` plugin and install it.\r\n\r\nOr you can install it via `apm`:\r\n\r\n`apm install livestyle-atom`\r\n\r\n## Usage\r\n\r\nThis plugin doesn’t require any special setup: simply start Atom and Google Chrome and you are ready for real-time editing.\r\n\r\nWhen creating a new, unsaved files, make sure you set document syntax to either `CSS`, `LESS` or `SCSS`, otherwise this document won’t appear in LiveStyle popup in Chrome.\r\n\r\n## Setting global dependencies for preprocessors\r\n\r\nAs described in [Working with preprocessors](http://livestyle.io/docs/preprocessors/) section of LiveStyle docs, it is possible to provide global dependencies that will be used for parsing preprocessor files.\r\n\r\nCurrently, Atom doesn‘t provide any means to create project-level configs. In order to set global dependencies, you have to create `livestyle.json` (or `.livestyle.json`) file in your project root with content like this:\r\n\r\n```json\r\n{\r\n    \"globals\": [\"path/to/dep.scss\", \"libs/*.scss\"]\r\n}\r\n```\r\n\r\n* All paths must be relative to `livestyle.json`’s folder.\r\n* You can set either direct file paths or use glob patterns, but remember that sometimes order of dependencies matters.\r\n* Too much global dependencies will slow down LiveStyle, workflow with many dependencies wasn’t optimized yet. So keep only those dependencies you acttually use.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}